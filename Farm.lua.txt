return function(fC, getTranslatedText, estiloBoton, redondearYbordear, showNotification, ReplicatedStorage, LocalPlayer, isRunning)
    local active = false
    local whitelist = {}
    local fruitButtons = {}
    local dropdownVisible = false

    local frutasPersonalizadas = {}
    local url = "https://raw.githubusercontent.com/62883/-/refs/heads/main/Fruits.lua"
    local success, result = pcall(function()
        return loadstring(game:HttpGet(url))()
    end)
    if success and type(result) == "table" then
        frutasPersonalizadas = result
    else
        warn("No se pudo cargar la lista de frutas:", result)
    end

    local GetFarmAsync = require(ReplicatedStorage:WaitForChild("Modules"):WaitForChild("GetFarmAsync"))
    local Remotes = require(ReplicatedStorage:WaitForChild("Modules"):WaitForChild("Remotes"))

    local btnFarm = Instance.new("TextButton", fC)
    btnFarm.Name = "FarmButton"
    btnFarm.Size = UDim2.new(1, 0, 0, 30)
    btnFarm.Position = UDim2.new(0, 0, 0, 10)
    btnFarm.Text = getTranslatedText("farmButton", false) .. " ▼"
    estiloBoton(btnFarm)

    local dropdownFrame = Instance.new("ScrollingFrame", fC)
    dropdownFrame.Name = "DropdownFrame"
    dropdownFrame.Size = UDim2.new(1, 0, 0, 150)
    dropdownFrame.Position = UDim2.new(0, 0, 0, 45)
    dropdownFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    dropdownFrame.Visible = false
    dropdownFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
    dropdownFrame.ScrollBarThickness = 6
    dropdownFrame.BorderSizePixel = 0
    dropdownFrame.ZIndex = 5
    dropdownFrame.ClipsDescendants = false
    redondearYbordear(dropdownFrame)

    local btnActivate = Instance.new("TextButton", fC)
    btnActivate.Name = "ActivateButton"
    btnActivate.Size = UDim2.new(1, 0, 0, 30)
    btnActivate.Position = UDim2.new(0, 0, 0, 80)
    btnActivate.Text = getTranslatedText("activateCollection", false)
    estiloBoton(btnActivate)

    local function updateFruitList()
        dropdownFrame:ClearAllChildren()
        fruitButtons = {}

        local y = 0
        for fruitName, _ in pairs(frutasPersonalizadas) do
            local btn = Instance.new("TextButton", dropdownFrame)
            btn.Size = UDim2.new(1, -10, 0, 30)
            btn.Position = UDim2.new(0, 5, 0, y)
            btn.Text = (whitelist[fruitName] and "[ACTIVO] " or "[DESACT.] ") .. fruitName
            btn.BackgroundColor3 = whitelist[fruitName] and Color3.fromRGB(60, 120, 60) or Color3.fromRGB(40, 40, 40)
            btn.TextColor3 = Color3.fromRGB(255, 255, 255)
            btn.Font = Enum.Font.SourceSans
            btn.TextSize = 14
            btn.BorderSizePixel = 0
            btn.ZIndex = 5
            redondearYbordear(btn)
            fruitButtons[fruitName] = btn
            y = y + 35

            btn.MouseButton1Click:Connect(function()
                whitelist[fruitName] = not whitelist[fruitName]
                btn.Text = (whitelist[fruitName] and "[ACTIVO] " or "[DESACT.] ") .. fruitName
                btn.BackgroundColor3 = whitelist[fruitName] and Color3.fromRGB(60, 120, 60) or Color3.fromRGB(40, 40, 40)
            end)
        end

        dropdownFrame.CanvasSize = UDim2.new(0, 0, 0, y)
    end

    local function autoCollect()
        while active and isRunning do
            local myFarm = GetFarmAsync(LocalPlayer)
            if myFarm then
                local frutasPorRecolectar = {}
                for _, plot in pairs(myFarm:GetDescendants()) do
                    if plot:IsA("Model") then
                        local name = plot.Name
                        local mutation = plot:GetAttribute("Mutation")
                        local fullName = name .. (mutation and (" | " .. mutation) or "")
                        if whitelist[fullName] then
                            table.insert(frutasPorRecolectar, plot)
                            if #frutasPorRecolectar >= 10 then
                                pcall(function()
                                    Remotes.Crops.Collect.send(frutasPorRecolectar)
                                end)
                                frutasPorRecolectar = {}
                                task.wait(0.2)
                            end
                        end
                    end
                end
                if #frutasPorRecolectar > 0 then
                    pcall(function()
                        Remotes.Crops.Collect.send(frutasPorRecolectar)
                    end)
                end
            else
                warn("No se encontró tu granja.")
            end
            task.wait(1)
        end
    end

    btnFarm.MouseButton1Click:Connect(function()
        dropdownVisible = not dropdownVisible
        dropdownFrame.Visible = dropdownVisible
        btnFarm.Text = getTranslatedText("farmButton", false) .. (dropdownVisible and " ▲" or " ▼")
        if dropdownVisible then updateFruitList() end
    end)

    btnActivate.MouseButton1Click:Connect(function()
        active = not active
        btnActivate.Text = getTranslatedText("activateCollection", active)
        btnActivate.BackgroundColor3 = active and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(35, 35, 35)
        if active then task.spawn(autoCollect) end
    end)

    local sellAllButton = Instance.new("TextButton", fC)
    sellAllButton.Name = "SellButton"
    sellAllButton.Size = UDim2.new(1, 0, 0, 30)
    sellAllButton.Position = UDim2.new(0, 0, 0, 115)
    sellAllButton.Text = getTranslatedText("sellButton")
    estiloBoton(sellAllButton)

    sellAllButton.MouseButton1Click:Connect(function()
        local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait(3)
        if not character or not character:FindFirstChild("HumanoidRootPart") then
            warn("Personaje no disponible")
            showNotification(fC, "Error: Personaje no disponible", nil)
            return
        end

        local originalPos = character.HumanoidRootPart.CFrame
        local sellPos = Vector3.new(92.85, 3.00, 6.56)

        pcall(function()
            character.HumanoidRootPart.CFrame = CFrame.new(sellPos)
        end)

        task.wait(0.1)
        local sellEvent = ReplicatedStorage:WaitForChild("GameEvents"):WaitForChild("Sell_Inventory", 5)
        if sellEvent then
            pcall(function()
                sellEvent:FireServer()
                showNotification(fC, "Inventario vendido", Color3.fromRGB(50, 255, 50))
            end)
        else
            warn("No se encontró el evento Sell_Inventory")
            showNotification(fC, "Error: Evento de venta no encontrado", nil)
        end

        task.wait(3)
        pcall(function()
            character.HumanoidRootPart.CFrame = originalPos
        end)
    end)
end
